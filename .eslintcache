[{"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/index.tsx":"1","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/reportWebVitals.ts":"2","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/App.tsx":"3","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminAppBar/AdminAppBar.tsx":"4","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/LoginForm/LoginForm.tsx":"5","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/SignupForm/SignupForm.tsx":"6","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/redux/store.ts":"7","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/redux/auth/authSlice.ts":"8","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/services/firebase.ts":"9","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/constants/AuthConstants.ts":"10","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/services/eventEmitter.ts":"11","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/routes/routeConfig.tsx":"12","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminHome/AdminHome.tsx":"13","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/constants/RouteConstants.ts":"14","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/UserMenu/UserMenu.tsx":"15","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/GuardedRoute/GuardedRoute.tsx":"16","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/UserProfile/UserProfile.tsx":"17","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/redux/profile/profileSlice.ts":"18","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AppLoader/AppLoader.tsx":"19","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminMenu/AdminMenu.tsx":"20","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminMenuItem/AdminMenuItem.tsx":"21","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/services/errorHandler.ts":"22","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/TabPanel/TabPanel.tsx":"23"},{"size":623,"mtime":1612540555208,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1611987287664,"results":"26","hashOfConfig":"25"},{"size":1291,"mtime":1612700064623,"results":"27","hashOfConfig":"25"},{"size":3893,"mtime":1612694806675,"results":"28","hashOfConfig":"25"},{"size":3774,"mtime":1612615969520,"results":"29","hashOfConfig":"25"},{"size":3880,"mtime":1612538766436,"results":"30","hashOfConfig":"25"},{"size":410,"mtime":1612698231276,"results":"31","hashOfConfig":"25"},{"size":3465,"mtime":1612977377750,"results":"32","hashOfConfig":"25"},{"size":2173,"mtime":1612694947529,"results":"33","hashOfConfig":"25"},{"size":106,"mtime":1612539517577,"results":"34","hashOfConfig":"25"},{"size":504,"mtime":1612546512965,"results":"35","hashOfConfig":"25"},{"size":743,"mtime":1612873640972,"results":"36","hashOfConfig":"25"},{"size":1773,"mtime":1612873721644,"results":"37","hashOfConfig":"25"},{"size":128,"mtime":1612873608164,"results":"38","hashOfConfig":"25"},{"size":1450,"mtime":1612688510870,"results":"39","hashOfConfig":"25"},{"size":634,"mtime":1612687289430,"results":"40","hashOfConfig":"25"},{"size":2084,"mtime":1612701867242,"results":"41","hashOfConfig":"25"},{"size":560,"mtime":1612698593065,"results":"42","hashOfConfig":"25"},{"size":875,"mtime":1612700451619,"results":"43","hashOfConfig":"25"},{"size":1383,"mtime":1613143227255,"results":"44","hashOfConfig":"25"},{"size":1177,"mtime":1612875864301,"results":"45","hashOfConfig":"25"},{"size":657,"mtime":1612977259011,"results":"46","hashOfConfig":"25"},{"size":692,"mtime":1613141574246,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19uw5r",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/index.tsx",[],["101","102"],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/reportWebVitals.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/App.tsx",["103","104","105","106","107","108"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { AdminAppBar } from './components/AdminAppBar/AdminAppBar';\nimport Firebase from './services/firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, refreshLogin, selectAuthState } from './redux/auth/authSlice';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Routes from './routes/routeConfig';\nimport RouteConstants from './constants/RouteConstants';\nimport AdminHome from './components/AdminHome/AdminHome';\nimport AuthConstants from './constants/AuthConstants';\nimport { CircularProgress } from '@material-ui/core';\nimport AppLoader from './components/AppLoader/AppLoader';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n\n  Firebase.auth().onAuthStateChanged((user) => {\n    console.warn(user);\n    if(user) {\n      dispatch(refreshLogin());\n    } else {\n      dispatch(logout());\n    }\n  });\n\n  const authState = useSelector(selectAuthState);\n  if(authState === AuthConstants.Unknown) {\n    return(\n      <AppLoader />\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <AdminAppBar />\n        <Switch>\n          <Routes/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminAppBar/AdminAppBar.tsx",["109","110","111"],"import React, { useEffect, useState } from 'react';\nimport { AppBar, Avatar, Button, ButtonGroup, CircularProgress, createStyles, Dialog, DialogContent, DialogTitle, Grow, IconButton, makeStyles, Menu, MenuItem, Theme, Toolbar, Typography } from '@material-ui/core';\n\nimport './AdminAppBar.scss';\nimport LoginForm from '../LoginForm/LoginForm';\nimport SignupForm from '../SignupForm/SignupForm';\nimport { selectAuthState, selectDisplayName } from '../../redux/auth/authSlice';\nimport { useSelector } from 'react-redux';\nimport AuthConstants from '../../constants/AuthConstants';\nimport Emitter from '../../services/eventEmitter';\nimport UserMenu from '../UserMenu/UserMenu';\n\nconst useStyles = makeStyles((theme: Theme) => \n    createStyles({\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1\n        }\n    })\n)\n\nexport const AdminAppBar: React.FC = (): JSX.Element => {\n    const styles = useStyles();\n    const [loginModalOpen, setLoginModalOpen] = useState(false);\n    const [signupModalOpen, setSignupModalOpen] = useState(false);\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    useEffect(() => {\n        Emitter.on('AUTH_DONE', () => {\n            if(loginModalOpen) {\n                setLoginModalOpen(false);\n            }\n            if(signupModalOpen) {\n                setSignupModalOpen(false);\n            }\n        });\n        return () => {\n            Emitter.off('AUTH_DONE');\n        }\n    })\n\n    const handleLoginButtonClick = () => {\n        if(!loginModalOpen) {\n            setLoginModalOpen(true);\n        }\n    }\n\n    const handleSignupButtonClick = () => {\n        if(!signupModalOpen) {\n            setSignupModalOpen(true);\n        }\n    }\n\n    const handleLoginClose = () => {\n        setLoginModalOpen(false);\n    }\n\n    const handleSignupClose = () => {\n        setSignupModalOpen(false);\n    }\n\n    const authState = useSelector(selectAuthState);\n    const displayName = useSelector(selectDisplayName);\n\n    const handleUserAvatarClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    }\n\n    const handleUserMenuClose = () => {\n        setAnchorEl(null);\n    }\n\n    return(\n        <React.Fragment>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <Typography className={styles.title} variant=\"h6\">Firebase Admin Panel</Typography>\n                    {(authState === AuthConstants.NotAuthenticated) ? <ButtonGroup variant=\"text\" color=\"inherit\">\n                        <Button onClick={handleLoginButtonClick}>Login</Button>\n                        <Button onClick={handleSignupButtonClick}>Signup</Button>\n                    </ButtonGroup> : (authState === AuthConstants.Unknown) ? <CircularProgress color=\"secondary\" size={24}/> : \n                        <IconButton onClick={handleUserAvatarClick}>\n                            <Avatar >{displayName ? displayName[0].toUpperCase() : '?'}</Avatar>\n                        </IconButton>}\n                </Toolbar>\n            </AppBar>\n            <Dialog maxWidth=\"sm\" fullWidth={true} open={loginModalOpen} onClose={handleLoginClose} aria-labelledby=\"login-modal-title\" >\n                <DialogTitle id=\"login-modal-title\">Login</DialogTitle>\n                <DialogContent>\n                    <LoginForm />\n                </DialogContent>\n            </Dialog>\n            <Dialog maxWidth=\"sm\" fullWidth={true} open={signupModalOpen} onClose={handleSignupClose} aria-labelledby=\"signup-modal-title\" >\n                <DialogTitle id=\"signup-modal-title\">Signup</DialogTitle>\n                <DialogContent>\n                    <SignupForm />\n                </DialogContent>\n            </Dialog>\n            <UserMenu anchorEl={anchorEl} handleUserMenuClose={handleUserMenuClose}/>\n        </React.Fragment>\n    );\n}","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/LoginForm/LoginForm.tsx",["112","113","114","115","116","117","118","119","120"],"import React, { useEffect } from 'react';\nimport { Button, CircularProgress, createStyles, makeStyles, TextField, Theme } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAsync, selectError } from '../../redux/auth/authSlice';\n\ninterface LoginValues {\n    email: string,\n    password: string\n}\n\nconst useStyles = makeStyles((theme: Theme) => \n    createStyles({\n        loginForm: {\n            '& .MuiTextField-root': {\n                marginBottom: theme.spacing(4)\n            },\n            // '& .MuiButton-root': {\n            //     marginBottom: theme.spacing(2)\n            // }\n        },\n        buttonWrapper: {\n            position: 'relative',\n            marginBottom: theme.spacing(2)\n        },\n        buttonLoading: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            marginTop: -12,\n            marginLeft: -12\n        }\n    })\n)\n\nconst loginValidationSchema = Yup.object().shape({\n    email: Yup.string().email('Kindly provide a valid email!').required('Kindly provide an email!'),\n    password: Yup.string().required('Kindly provide a password!')\n});\n\n\n\nconst LoginForm: React.FC = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        formik.setSubmitting(false);\n    }, [error]);\n\n    const styles = useStyles();\n\n    const handleLogin = ({email, password}: LoginValues) => {\n        console.log(email, password);\n        dispatch(loginAsync(email, password));\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: loginValidationSchema,\n        // validate: ({password}: LoginValues) => {\n        //     const errors: any = {};\n        //     if(!/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(password))\n        //         errors.password = `Password doesn't match the minimum criteria.\\nShould contain minimum 8 characters.\\nShould contain atleast one lowercase alphabet\\nShould contain atleast one uppercase alphabet.`\n        //     return errors;\n        // },\n        onSubmit: handleLogin\n    });\n\n    return (\n        <form className={styles.loginForm} onSubmit={formik.handleSubmit}>\n            <TextField\n                name=\"email\"\n                fullWidth\n                label=\"Email Id\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={((formik.errors.email && formik.touched.email) || (error && error === \"User not found!\")) ? true : false}\n                helperText={(error === \"User not found!\") && error || formik.touched.email && formik.errors.email}\n            />\n            <TextField\n                name=\"password\"\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={((formik.errors.password && formik.touched.password) || (error && error !== \"User not found!\")) ? true : false}\n                helperText={(error !== \"User not found!\") && error || formik.touched.password && formik.errors.password}\n            />\n            <div className={styles.buttonWrapper}>\n                <Button disabled={formik.isSubmitting} variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>Login</Button>\n                {formik.isSubmitting && <CircularProgress size={24} className={styles.buttonLoading} />}\n            </div>\n        </form>\n    );\n}\n\nexport default LoginForm;","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/SignupForm/SignupForm.tsx",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/redux/store.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/redux/auth/authSlice.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/services/firebase.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/constants/AuthConstants.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/services/eventEmitter.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/routes/routeConfig.tsx",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminHome/AdminHome.tsx",["121"],"import React from 'react';\nimport { Box, Button, Container, createStyles, Icon, makeStyles, Theme, Typography } from '@material-ui/core';\n\nimport AdminHomeBg from '../../assets/adminHomeBg.jpg';\nimport { useSelector } from 'react-redux';\nimport { selectAuthState, selectIsAdmin } from '../../redux/auth/authSlice';\nimport AuthConstants from '../../constants/AuthConstants';\nimport RouteConstants from '../../constants/RouteConstants';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n        },\n        homeImage: {\n            maxWidth: '100%'\n        },\n        homeContainer: { \n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        }\n    })\n);\n\nconst AdminHome: React.FC = (): JSX.Element => {\n    const styles = useStyles();\n\n    const authState = useSelector(selectAuthState);\n    const isAdmin = useSelector(selectIsAdmin);\n\n    return(\n        <Box className={styles.root}>\n            <Container className={styles.homeContainer} maxWidth=\"md\">\n                <Typography color=\"primary\" variant=\"h1\">\n                    Firebase Admin Panel\n                </Typography>\n                {(authState === AuthConstants.Authenticated) && \n                <Button variant=\"outlined\" component={Link} to={RouteConstants.ADMIN_MENU} disabled={!isAdmin} color=\"primary\" size=\"large\" startIcon={<Icon>star</Icon>} endIcon={<Icon>star</Icon>}>\n                    Go to Administration\n                </Button>}\n            </Container>\n            <img className={styles.homeImage} src={AdminHomeBg}/>\n        </Box>\n    );\n}\n\nexport default AdminHome;","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/constants/RouteConstants.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/UserMenu/UserMenu.tsx",["122"],"import { Grow, Menu, MenuItem } from '@material-ui/core';\nimport React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport RouteConstants from '../../constants/RouteConstants';\nimport { logoutAsync } from '../../redux/auth/authSlice';\n\ninterface IProps {\n    anchorEl: null | HTMLElement,\n    handleUserMenuClose: (event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void\n}\n\nconst UserMenu: React.FC<IProps> = ({anchorEl, handleUserMenuClose}): JSX.Element => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleLogout = () => {\n        handleUserMenuClose({}, \"backdropClick\");\n        dispatch(logoutAsync());\n    }\n\n    const handleProfile = () => {\n        handleUserMenuClose({}, \"backdropClick\");\n        history.push('/profile');\n    }\n\n    return(\n        <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleUserMenuClose}\n                TransitionComponent={Grow}\n            >\n                {(history.location.pathname !== RouteConstants.USER_PROFILE) && <MenuItem onClick={handleProfile}>Profile</MenuItem>}\n                {/* <MenuItem onClick={() => {}}>My account</MenuItem> */}\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n    );\n}\n\nexport default UserMenu;","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/GuardedRoute/GuardedRoute.tsx",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/UserProfile/UserProfile.tsx",["123","124","125","126"],"import React from \"react\";\nimport { Avatar, Box, Button, Container, createStyles, Icon, IconButton, makeStyles, TextField, Theme, Typography } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { selectProfileDisplayName, selectProfileEmail } from \"../../redux/profile/profileSlice\";\n// import { selectDisplayName } from \"../../redux/auth/authSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        profileContainer: {\n            paddingTop: theme.spacing(5),\n            paddingBottom: theme.spacing(5),\n            \n        },\n        profileHeader: {\n            '& .MuiTypography-h3': {\n                textDecoration: 'underline'\n            },\n            '& div.MuiInput-formControl': {\n                fontSize: '2em',\n                marginRight: theme.spacing(10)\n            },\n            '& div.MuiInput-formControl>input::placeholder': {\n                fontStyle: 'italic'\n            }\n        }\n    })\n)\n\nexport const UserProfile: React.FC = (): JSX.Element => {\n    // const formik = useFormik();\n    const displayName = useSelector(selectProfileDisplayName);\n    const email = useSelector(selectProfileEmail);\n    \n    const styles = useStyles();\n\n    return(\n        <React.Fragment>\n            <Container className={styles.profileContainer} maxWidth=\"md\">\n                <Box className={styles.profileHeader}>\n                    {displayName ? <Typography variant=\"h3\">\n                        {displayName ? displayName : \"Add your display name.\"}\n                    </Typography> : \n                    <React.Fragment>\n                        <TextField placeholder=\"Add your display name\" size=\"medium\" variant=\"standard\" />\n                        <IconButton size=\"medium\" color=\"primary\">\n                            <Icon fontSize=\"large\">check</Icon>\n                        </IconButton>\n                    </React.Fragment>\n                    }\n                </Box>\n\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default UserProfile;","/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/redux/profile/profileSlice.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AppLoader/AppLoader.tsx",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminMenu/AdminMenu.tsx",["127","128","129","130","131","132"],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/AdminMenuItem/AdminMenuItem.tsx",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/services/errorHandler.ts",[],"/home/jyotirmaya/Projects/Firebase-admin-demo/firebase-admin-demo-ui/src/components/TabPanel/TabPanel.tsx",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":15},{"ruleId":"137","severity":1,"message":"142","line":8,"column":25,"nodeType":"139","messageId":"140","endLine":8,"endColumn":30},{"ruleId":"137","severity":1,"message":"143","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":22},{"ruleId":"137","severity":1,"message":"144","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":17},{"ruleId":"137","severity":1,"message":"145","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":26},{"ruleId":"137","severity":1,"message":"146","line":2,"column":115,"nodeType":"139","messageId":"140","endLine":2,"endColumn":119},{"ruleId":"137","severity":1,"message":"147","line":2,"column":145,"nodeType":"139","messageId":"140","endLine":2,"endColumn":149},{"ruleId":"137","severity":1,"message":"148","line":2,"column":151,"nodeType":"139","messageId":"140","endLine":2,"endColumn":159},{"ruleId":"149","severity":1,"message":"150","line":50,"column":8,"nodeType":"151","endLine":50,"endColumn":15,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":84,"column":59,"nodeType":"155","messageId":"156","endLine":84,"endColumn":61},{"ruleId":"153","severity":1,"message":"154","line":84,"column":68,"nodeType":"155","messageId":"156","endLine":84,"endColumn":70},{"ruleId":"153","severity":1,"message":"157","line":84,"column":68,"nodeType":"155","messageId":"156","endLine":84,"endColumn":70},{"ruleId":"153","severity":1,"message":"157","line":84,"column":92,"nodeType":"155","messageId":"156","endLine":84,"endColumn":94},{"ruleId":"153","severity":1,"message":"154","line":95,"column":59,"nodeType":"155","messageId":"156","endLine":95,"endColumn":61},{"ruleId":"153","severity":1,"message":"154","line":95,"column":68,"nodeType":"155","messageId":"156","endLine":95,"endColumn":70},{"ruleId":"153","severity":1,"message":"157","line":95,"column":68,"nodeType":"155","messageId":"156","endLine":95,"endColumn":70},{"ruleId":"153","severity":1,"message":"157","line":95,"column":95,"nodeType":"155","messageId":"156","endLine":95,"endColumn":97},{"ruleId":"158","severity":1,"message":"159","line":45,"column":13,"nodeType":"160","endLine":45,"endColumn":66},{"ruleId":"137","severity":1,"message":"161","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":23},{"ruleId":"137","severity":1,"message":"162","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"163","line":2,"column":23,"nodeType":"139","messageId":"140","endLine":2,"endColumn":29},{"ruleId":"137","severity":1,"message":"164","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"165","line":33,"column":11,"nodeType":"139","messageId":"140","endLine":33,"endColumn":16},{"ruleId":"137","severity":1,"message":"166","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":13},{"ruleId":"137","severity":1,"message":"163","line":2,"column":15,"nodeType":"139","messageId":"140","endLine":2,"endColumn":21},{"ruleId":"137","severity":1,"message":"167","line":2,"column":73,"nodeType":"139","messageId":"140","endLine":2,"endColumn":83},{"ruleId":"137","severity":1,"message":"168","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":14},{"ruleId":"137","severity":1,"message":"169","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":21},{"ruleId":"137","severity":1,"message":"170","line":14,"column":11,"nodeType":"139","messageId":"140","endLine":14,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'login' is defined but never used.","'Route' is defined but never used.","'RouteConstants' is defined but never used.","'AdminHome' is defined but never used.","'CircularProgress' is defined but never used.","'Grow' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["173"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'useFormik' is defined but never used.","'email' is assigned a value but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'AdminMenuItem' is defined but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [error, formik]",{"range":"176","text":"177"},[1428,1435],"[error, formik]"]